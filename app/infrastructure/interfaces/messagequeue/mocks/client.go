// Code generated by MockGen. DO NOT EDIT.
// Source: ./client.go

// Package messagequeuemocks is a generated GoMock package.
package messagequeuemocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	messagequeue "github.com/jiradeto/gh-scanner/app/infrastructure/interfaces/messagequeue"
)

// Mocks is a mock of MessageQueueClient interface.
type Mocks struct {
	ctrl     *gomock.Controller
	recorder *MocksMockRecorder
}

// MocksMockRecorder is the mock recorder for Mocks.
type MocksMockRecorder struct {
	mock *Mocks
}

// NewMocks creates a new mock instance.
func NewMocks(ctrl *gomock.Controller) *Mocks {
	mock := &Mocks{ctrl: ctrl}
	mock.recorder = &MocksMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mocks) EXPECT() *MocksMockRecorder {
	return m.recorder
}

// PublishMessage mocks base method.
func (m *Mocks) PublishMessage(message *messagequeue.StartScannerMessage) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PublishMessage", message)
	ret0, _ := ret[0].(error)
	return ret0
}

// PublishMessage indicates an expected call of PublishMessage.
func (mr *MocksMockRecorder) PublishMessage(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishMessage", reflect.TypeOf((*Mocks)(nil).PublishMessage), message)
}
